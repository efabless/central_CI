name: CI

on:
  # Runs on Every Push
  push:
  # Runs on Pull Requests
  pull_request:
  workflow_dispatch:

jobs:
  setup_env:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dependencies: ["OpenLane", "pdk", "precheck", "caravel", "mgmt_core_wrapper"]
    steps:
      - uses: actions/checkout@v3

      - name: Export Dependencies Path
        run: echo "DEPENDENCIES_PATH=/home/runner/work/dependencies" >> $GITHUB_ENV

      - name: Download Dependencies
        run: |
          mkdir -p ${{ env.DEPENDENCIES_PATH }}/${{ matrix.dependencies }}
          python3 -m pip install --upgrade --no-cache-dir volare
          python3 $GITHUB_WORKSPACE/.github/scripts/install_dep.py --json $GITHUB_WORKSPACE/tools.json --output ${{ env.DEPENDENCIES_PATH }}/${{ matrix.dependencies }} --dependency ${{ matrix.dependencies }}

      - name: Tarball ${{ matrix.dependencies }}
        run: |
          tar -cf /tmp/${{ matrix.dependencies }}.tar -C $DEPENDENCIES_PATH/${{ matrix.dependencies }} .

      - name: Upload ${{ matrix.dependencies }} Tarball
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.dependencies }}-tarball
          path: /tmp/${{ matrix.dependencies }}.tar
  
  download_designs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        designs: ["caravel_user_project"]
    steps:
      - uses: actions/checkout@v3

      - name: Export DESIGN PATH
        run: echo "DESIGN_PATH=/home/runner/work/designs" >> $GITHUB_ENV

      - name: Download Designs
        run: |
          mkdir -p ${{ env.DESIGN_PATH }}/${{ matrix.designs }}
          python3 -m pip install --upgrade --no-cache-dir volare
          python3 $GITHUB_WORKSPACE/.github/scripts/install_dep.py --json $GITHUB_WORKSPACE/.github/scripts/designs.json --output ${{ env.DESIGN_PATH }}/${{ matrix.designs }} --dependency ${{ matrix.designs }}

      - name: Tarball Designs
        run: |
          tar -cf /tmp/${{ matrix.designs }}.tar -C $DESIGN_PATH .

      - name: Upload ${{ matrix.designs }} Tarball
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.designs }}-tarball
          path: /tmp/${{ matrix.designs }}.tar
  
  harden_designs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pdk: ["sky130A", "sky130B"]
        designs: ["caravel_user_project"]
    needs: [setup_env, download_designs]
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Export Environment Variables
        run: |
          echo "CARAVEL_ROOT=/home/runner/work/dependencies/caravel" >> $GITHUB_ENV
          echo "MCW_ROOT=/home/runner/work/dependencies/caravel_mgmt_soc_litex" >> $GITHUB_ENV
          echo "PRECHECK_ROOT=/home/runner/work/dependencies/mpw_precheck" >> $GITHUB_ENV
          echo "PDK_ROOT=/home/runner/work/dependencies/pdk/pdk" >> $GITHUB_ENV
          echo "OPENLANE_ROOT=/home/runner/work/dependencies/OpenLane" >> $GITHUB_ENV
          echo "PDK=${{ matrix.pdk }}" >> $GITHUB_ENV
          echo "DEPENDENCIES_PATH=/home/runner/work/dependencies" >> $GITHUB_ENV
          echo "DESIGN_PATH=/home/runner/work/designs/${{ matrix.designs }}" >> $GITHUB_ENV

      - name: Download OpenLane Tarball
        uses: actions/download-artifact@v3
        with:
          name: OpenLane-tarball
          path: /tmp

      - name: Unpack OpenLane Tarball
        run: |
          sudo mkdir -p ${{ env.DEPENDENCIES_PATH }}/OpenLane
          sudo chown -R $USER:$USER ${{ env.DEPENDENCIES_PATH }}/OpenLane
          tar -xf /tmp/OpenLane.tar -C ${{ env.DEPENDENCIES_PATH }}/OpenLane .\

      - name: Download pdk Tarball
        uses: actions/download-artifact@v3
        with:
          name: pdk-tarball
          path: /tmp

      - name: Unpack pdk Tarball
        run: |
          sudo mkdir -p ${{ env.DEPENDENCIES_PATH }}/pdk
          sudo chown -R $USER:$USER ${{ env.DEPENDENCIES_PATH }}/pdk
          tar -xf /tmp/pdk.tar -C ${{ env.DEPENDENCIES_PATH }}/pdk .

      - name: Download ${{ matrix.designs }} Tarball
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.designs }}-tarball
          path: /tmp

      - name: Unpack ${{ matrix.designs }} Tarball
        run: |
          sudo mkdir -p ${{ env.DESIGN_PATH }}
          sudo chown -R $USER:$USER ${{ env.DESIGN_PATH }}
          tar -xf /tmp/${{ matrix.designs }}.tar -C ${{ env.DESIGN_PATH }} .

      - name: setup openlane
        run: |
          json_file=$(cat $GITHUB_WORKSPACE/tools.json)
          openlane_commit=$(echo "${json_file}" | jq -r ".OpenLane.commit")
          export OPENLANE_IMAGE_NAME=efabless/openlane:${openlane_commit}
          export IMAGE_NAME=efabless/openlane:${openlane_commit}
          echo "OPENLANE_IMAGE_NAME=efabless/openlane:${openlane_commit}" >> $GITHUB_ENV
          echo "IMAGE_NAME=efabless/openlane:${openlane_commit}" >> $GITHUB_ENV
          cd ${{ env.OPENLANE_ROOT }}
          make pull-openlane


      - name: harden
        run: |
          ls ${{ env.PDK_ROOT }}
          cd ${{ env.DESIGN_PATH }}/${{ matrix.designs }}
          python3 $GITHUB_WORKSPACE/.github/scripts/get_designs.py --design ${{ env.DESIGN_PATH }}/${{ matrix.designs }}
          for word in $(cat harden_sequence.txt); do
            make $word
          done

  # pdk:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Export PDK ROOT
  #       run: echo "PDK_ROOT=/home/runner/work/pdk" >> $GITHUB_ENV
      
  #     - name: Export OPENLANE ROOT
  #       run: echo "OPENLANE_ROOT=/home/runner/work/openlane" >> $GITHUB_ENV

  #     - name: Export DESIGN PATH
  #       run: echo "DESIGN_PATH=/home/runner/work/designs" >> $GITHUB_ENV

  #     - name: Download Designs
  #       run: |
  #         mkdir -p ${{ env.DESIGN_PATH }}
  #         cd ${{ env.DESIGN_PATH }}
  #         python3 $GITHUB_WORKSPACE/.github/scripts/get_designs.py

  #     - name: Install dependencies
  #       run: |
  #         cd ${{ env.DESIGN_PATH }}/caravel_user_project
  #         sudo mkdir -p ${{ env.PDK_ROOT }}
  #         sudo chown -R $USER:$USER ${{ env.PDK_ROOT }}
  #         make install
  #         make openlane
  #         make pdk-with-volare

  #     - name: Tarball PDK
  #       run: |
  #         tar -cf /tmp/pdk.tar -C $PDK_ROOT .

  #     - name: Upload PDK Tarball
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: pdk-tarball
  #         path: /tmp/pdk.tar

  # user_project_flow:
  #   timeout-minutes: 720
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       pdk: ["sky130A", "sky130B"]
  #       design: ["caravel_user_project", "caravel_aes_example"]
  #   needs: [pdk]
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Export PDK VARIABLES
  #       run: |
  #         echo "PDK_ROOT=/home/runner/work/pdk" >> $GITHUB_ENV
  #         echo "PDK=${{ matrix.pdk }}" >> $GITHUB_ENV
  #         echo "PDKPATH=/home/runner/work/pdk/${{ matrix.pdk }}" >> $GITHUB_ENV
  #         echo "DESIGN_PATH=/home/runner/work/designs" >> $GITHUB_ENV

  #     - name: Download Designs
  #       run: |
  #         mkdir -p ${{ env.DESIGN_PATH }}
  #         cd ${{ env.DESIGN_PATH }}
  #         python3 $GITHUB_WORKSPACE/.github/scripts/get_designs.py

  #     - name: Export OPENLANE ROOT
  #       run: echo "OPENLANE_ROOT=/home/runner/work/openlane" >> $GITHUB_ENV

  #     - name: Download PDK Tarball
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: pdk-tarball
  #         path: /tmp

  #     - name: Unpack PDK Tarball
  #       run: |
  #         sudo mkdir -p ${{ env.PDK_ROOT }}
  #         sudo chown -R $USER:$USER ${{ env.PDK_ROOT }}
  #         tar -xf /tmp/pdk.tar -C $PDK_ROOT .

  #     - name: Install dependencies
  #       run: |
  #         cd ${{ env.DESIGN_PATH }}/${{ matrix.design }}
  #         make install
  #         make install_mcw
  #         make openlane
  #         make simenv

  #     - name: Harden using Openlane
  #       run: |
  #         cd ${{ env.DESIGN_PATH }}/${{ matrix.design }}
  #         make user_proj_example
  #         make user_project_wrapper

  #     - name: run precheck
  #       run: |
  #         export INPUT_DIRECTORY=$(pwd)
  #         export PRECHECK_ROOT=$INPUT_DIRECTORY/mpw_precheck
  #         export OUTPUT_DIRECTORY=$INPUT_DIRECTORY/mpw_precheck_result
  #         export OUTPUT=$OUTPUT_DIRECTORY/logs/precheck.log
  #         export PDKPATH=$PDK_ROOT/sky130A

  #         git clone --depth=1 https://github.com/efabless/mpw_precheck.git

  #         docker run -v "$PRECHECK_ROOT":"$PRECHECK_ROOT" -v "$INPUT_DIRECTORY":"$INPUT_DIRECTORY" -v "${{ env.PDK_ROOT }}":"${{ env.PDK_ROOT }}" -e INPUT_DIRECTORY="$INPUT_DIRECTORY" -e PDK_ROOT="${{ env.PDK_ROOT }}" -e PDKPATH="${{ env.PDKPATH }}" -u $(id -u "$USER"):$(id -g "$USER") efabless/mpw_precheck:latest bash -c "cd $PRECHECK_ROOT; python3 mpw_precheck.py --input_directory $INPUT_DIRECTORY --pdk_path ${{ env.PDKPATH }} --output_directory $OUTPUT_DIRECTORY license makefile consistency xor magic_drc klayout_beol klayout_feol klayout_met_min_ca_density klayout_offgrid klayout_pin_label_purposes_overlapping_drawing klayout_zeroarea lvs"

  #         cnt=$(grep -c "All Checks Passed" "$OUTPUT")
  #         if ! [[ $cnt ]]; then cnt=0; fi
  #         if [[ $cnt -eq 1 ]]; then exit 0; fi
  #         exit 2
      
  #     - name: upload failure logs
  #       if: failure()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: error
  #         path: |
  #           /home/runner/work/${{ env.DESIGN_PATH }}/${{ matrix.design }}/mpw_precheck_result/logs/*
